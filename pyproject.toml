[build-system]
build-backend = "hatchling.build"
requires = [ "hatchling" ]

[project]
name = "marktplaats"
version = "0.3.1"
description = "A small Python package to request listings from marktplaats.nl"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Jens de Ruiter", email = "me@jensderuiter.dev" },
]
requires-python = ">=3.9"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "beautifulsoup4>=4.13.4",
    "requests>=2.28.2",
    "typing-extensions>=4.13.2",
]

urls.bugs = "https://github.com/jensjeflensje/marktplaats-py/issues"
urls.homepage = "https://github.com/jensjeflensje/marktplaats-py"

[dependency-groups]
dev = [
    "beautifulsoup4>=4.13.4",
    "pytest>=8.3.5",
    "requests>=2.32.3",
    "requests-mock>=1.12.1",
]

[tool.ruff]
lint.select = [ "ALL" ]

lint.ignore = [
    "COM812",  # Conflict with formatter
    "CPY",     # No copyright statements
    "D1",      # Docstrings should not be enforced by default
    "D203",    # Choose D203 or D211
    "D212",    # Choose D212 or D213
    "DTZ",     # (project) We use naive timezones everywhere TODO: maybe this should be looked at
    "PLC0414", # (project) TODO: https://github.com/astral-sh/ruff/issues/18365
    "S404",    # Uses of subprocess are rejected, no need to reject the imports as well
]

lint.per-file-ignores."scripts/**/*.py" = [
    "INP001", # `scripts` is not a package
    "S101",   # We assume we don't run scripts with -O
    "S603",   # Use of subprocess
    "S607",   # Partial executable path
    "T201",   # We can print in scripts
    "TRY002", # In scripts, we throw `Exception` to just crash.
]
lint.per-file-ignores."tests/**/*.py" = [
    "E501",    # If the formatter doesn't fix the line length, it's good enough
    "FBT",     # We don't care about boolean parameters in tests
    "INP001",  # Tests are supposed to be an implicit namespace
    "PLR2004", # Magic values are allowed in tests
    "S101",    # Assert is allowed in tests
]

lint.flake8-tidy-imports.ban-relative-imports = "all" # For consistency

lint.isort.combine-as-imports = true
lint.isort.lines-after-imports = 2
lint.isort.required-imports = [ "from __future__ import annotations" ]

lint.preview = true

[tool.pyproject-fmt]
indent = 4

[tool.mypy]
exclude = '^tests/'
show_error_context = true
show_error_codes = true
pretty = true

warn_unused_configs = true

strict = true # All strict checks are already listed below, only here for future-proofing

# It already warns for the import, so we do not want to warn for each individual use.
# If the import is silenced, there's nothing else we can do so silence the uses as well.
# disallow_any_unimported = true
disallow_any_decorated = true
#disallow_any_explicit = true # TODO: disabled this for now; but enable this later to improve types
disallow_any_generics = true
disallow_subclassing_any = true

disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true

extra_checks = true
implicit_reexport = false
strict_concatenate = true
strict_equality = true
strict_bytes = true

enable_error_code = [
    "redundant-self",
    "deprecated",
    "redundant-expr",
    "possibly-undefined",
    "truthy-bool",
    "truthy-iterable",
    "ignore-without-code",
    "unused-awaitable",
    "possibly-undefined",
    "mutable-override",
]
